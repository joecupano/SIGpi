#!/bin/bash

###
### SIGpi
###
###  20250830-0100
###

###
###  Usage:  SIGpi [ACTION] [TARGET]
###
###       ACTION
###  
###          install                install TARGET from current release
###          remove                 remove installed TARGET
###          purge                  remove installed TARGET and purge configs
###          build                  compile and install TARGET (option may not be available)
###          package                compile, do not install, copy package to SIG/debs directory (option may not be available)
###          update                 check for update of TARGET
###          upgrade                upgrade TARGET to latest release
###
###       TARGET
###
###          A SIGpi package
###
###
###  Usage:  SIGpi device [ACTION] [TARGET]
###
###       ACTION
###  
###          install                install TARGET from current release
###          remove                 remove installed TARGET
###          purge                  remove installed TARGET and purge configs
###          build                  compile and install TARGET (option may not be available)
###          update                 check for update of TARGET
###          upgrade                upgrade TARGET to latest release
###
###       TARGET
###
###          A SDR device
###
###
###  Usage:  SIGpi [ACTION]
###
###       ACTION
###
###          SIGpi setup standard   First time setup for desktop
###          SIGpi setup server     First time setup for server
###          SIGpi list packages    List all packages included with SIGpi
###          SIGpi list installed   List installed SIGpi packages
###          SIGpi list library     List all packages included with SIGpi with installed ones marked with an *
###          SIGpi shell            provide SIGpi env variables around a TARGET
###


###
### INIT VARIABLES AND DIRECTORIES
###

# SIGpi Directory tree
SIGPI_ROOT=$HOME/SIG
SIGPI_SOURCE=$SIGPI_ROOT/source
SIGPI_HOME=$SIGPI_ROOT/SIGpi
SIGPI_ETC=$SIGPI_ROOT/etc
SIGPI_DEVICES=$SIGPI_HOME/devices
SIGPI_SCRIPTS=$SIGPI_HOME/scripts
SIGPI_PACKAGES=$SIGPI_HOME/packages
SIGPI_DEBS=$SIGPI_HOME/debs

# SIGpi Install Support files
SIGPI_INSTALLED=$SIGPI_ETC/INSTALLED_PKGS
SIGPI_INSTALDEV=$SIGPI_ETC/INSTALLED_DEVS
SIGPI_PKGLIST=$SIGPI_PACKAGES/PACKAGES
SIGPI_DEVLIST=$SIGPI_DEVICES/DEVICES
SIGPI_SCREEN_STANDARD=$SIGPI_SCRIPTS/screen_standard_setup
SIGPI_SCREEN_SERVER=$SIGPI_SCRIPTS/screen_server_setup
SIGPI_BANNER_COLOR="\e[0;104m\e[K"   # blue
SIGPI_BANNER_RESET="\e[0m"

# Detect architecture (x86, x86_64, aarch64, ARMv8, ARMv7)
SIGPI_HWARCH=`lscpu|grep Architecture|awk '{print $2}'`
# Detect Operating system (Debian GNU/Linux 11 (bullseye) or Ubuntu 22.04.3 LTS)
SIGPI_OSNAME=`cat /etc/os-release|grep "PRETTY_NAME"|awk -F'"' '{print $2}'`
# Is Platform good for install- true or false - we start with false
SIGPI_CERTIFIED="false"

# Desktop Source directories
SIGPI_BACKGROUNDS=$SIGPI_HOME/backgrounds
SIGPI_ICONS=$SIGPI_HOME/icons
SIGPI_LOGO=$SIGPI_HOME/logo
SIGPI_DESKTOP=$SIGPI_HOME/desktop

# Desktop Destination Directories
DESKTOP_DIRECTORY=/usr/share/desktop-directories
DESKTOP_FILES=/usr/share/applications
DESKTOP_ICONS=/usr/share/icons
DESKTOP_XDG_MENU=/usr/share/extra-xdg-menus

# SIGpi Menu category
SIGPI_MENU_CATEGORY=SIGpi
HAMRADIO_MENU_CATEGORY=HamRadio

# If we reached this point our hardware and operating system are certified for SIGpi


###
### FUNCTIONS
###

sigpi_update(){
    # Check for available updates to package
    wget https://raw.githubusercontent.com/joecupano/SIGpi/main/packages/PACKAGES -P $HOME/Downloads
    
    if grep $3 "$HOME/Downloads/PACKAGES"; then
        SIG_PKGSTAMP = 'grep $3 "$SIGPI_HOME/packages/PACKAGES"| cut -d,-f2'
        SIG_PKGNEW = 'grep $3 "$HOME/Downloads/PACKAGES"| cut -d,-f2'
        if [$SIG_PKGNEW != $SIG_PKGSTAMP]; then
            echo "Update $SIG_PKGNEW is available"
        else
            echo "No updates available"
        fi
    fi
}

sigpi_upgrade(){
    # Remove Package, update local clone, install updated package
    cd $SIGPI_HOME
    source $SIGPI_PACKAGES/$SPKGSCRIPT remove
    git pull
    source $SIGPI_PACKAGES/$SPKGSCRIPT install
}

###
###  MAIN
###

ACTION=$1
SPACKAGE=$2
SPKGSCRIPT="pkg_$2"
SCFGSCRIPT="cfg_$2"

case "$1" in 
    setup )
        source $SIGPI_SCRIPTS/SIGpi_setup $2
        ;;
    list )
        if [ "$2" = "installed" ]; then
            echo " "
                echo -e "${SIGPI_BANNER_COLOR} ##"
            echo -e "${SIGPI_BANNER_COLOR} ##   SIGpi list installed"
            echo -e "${SIGPI_BANNER_COLOR} ##"
            echo -e "${SIGPI_BANNER_RESET}"
            echo " "
            echo -e "INSTALLED\t PACKAGE\t VERSION\t DESCRIPTION"
            echo " "
            awk 'BEGIN {FS=","} {printf "%-15s %-15s %-15s\n", $1, $2, $3}' $SIGPI_INSTALLED|more
        fi
        if [ "$2" = "packages" ]; then
            echo " "
                echo -e "${SIGPI_BANNER_COLOR} ##"
            echo -e "${SIGPI_BANNER_COLOR} ##   SIGpi list packages"
            echo -e "${SIGPI_BANNER_COLOR} ##"
            echo -e "${SIGPI_BANNER_RESET}"
            echo " "
            echo -e "PACKAGE\t VERSION\t DESCRIPTION"
            echo " "
            awk 'BEGIN {FS=","} {printf "%-15s %-15s %-15s\n", $1, $2, $3}' $SIGPI_PKGLIST|more
        fi
        if [ "$2" = "library" ]; then
                file1=$SIGPI_PKGLIST
                file2=$SIGPI_INSTALLED
                echo " "
                echo -e "${SIGPI_BANNER_COLOR} ##"
                echo -e "${SIGPI_BANNER_COLOR} ##   SIGpi list library"
                echo -e "${SIGPI_BANNER_COLOR} ##"
                echo -e "${SIGPI_BANNER_RESET}"
                echo " "
                echo -e "\tINSTALLED\t PACKAGE\t VERSION\t DESCRIPTION"
                while IFS= read -r line_file1
                do
                        if grep -qF "$line_file1" "$file2"; then
                                echo -e "*\t $line_file1"|awk 'BEGIN {FS=","} {printf "%-15s %-15s %-15s %-15s\n", " ", $1, $2, $3}'
                        else
                                echo -e " \t $line_file1"|awk 'BEGIN {FS=","} {printf "%-15s %-15s %-15s %-15s\n", " ", $1, $2, $3}'
                        fi
                done < "$file1"
        fi
        ;;
    device )
        SDEVSCRIPT="device_$4"
        if [ "$3" = "build" ]; then
            source $SIGPI_DEVICES/$SDEVSCRIPT build
        fi
        if [ "$3" = "package" ]; then
            source $SIGPI_DEVICES/$SDEVSCRIPT package
        fi
        if [ "$3" = "remove" ]; then
            source $SIGPI_DEVICES/$SDEVSCRIPT remove
        fi
        if [ "$3" = "purge" ]; then
            source $SIGPI_DEVICES/$SDEVSCRIPT purge
        fi
        if [ "$3" = "install" ]; then
            source $SIGPI_DEVICES/$SDEVSCRIPT install
        fi
        ;;
    build )
        source $SIGPI_PACKAGES/$SPKGSCRIPT build
        #sudo dpkg -i $SIGPI_DEBS/$2
        ;;
    package )
        source $SIGPI_PACKAGES/$SPKGSCRIPT package
        ;;
    remove )
        source $SIGPI_PACKAGES/$SPKGSCRIPT remove
        ;;
    purge )
        source $SIGPI_PACKAGES/$SPKGSCRIPT purge
        ;;
    install )
        source $SIGPI_PACKAGES/$SPKGSCRIPT install
        ;;
    config )
        source $SIGPI_PACKAGES/$SCFGSCRIPT $3
        ;;
    update )
        sigpi_update $3
        ;;
    upgrade)
        sigpi_upgrade $3
        ;;
    shell )
        source $2
        ;;
    * )
        cat <<EOF

  Usage:  SIGpi [ACTION] [TARGET]

       ACTION
  
          install                install TARGET from current release
          remove                 remove installed TARGET
          purge                  remove installed TARGET and purge configs
          build                  compile and install TARGET (option may not be available)
          update                 check for update of TARGET
          upgrade                upgrade TARGET to latest release

       TARGET

          A SIGpi package
                 
  Usage:  SIGpi device [ACTION] [TARGET]

       ACTION
  
          install                install TARGET from current release
          remove                 remove installed TARGET
          purge                  remove installed TARGET and purge configs
          build                  compile and install TARGET (option may not be available)
          update                 check for update of TARGET
          upgrade                upgrade TARGET to latest release

       TARGET

          A SDR device

  Usage:  SIGpi [ACTION]

       ACTION

          SIGpi setup standard   First time setup for desktop
          SIGpi setup server     First time setup for server
          SIGpi list packages    List all packages included with SIGpi
          SIGpi list installed   List installed SIGpi packages
          SIGpi list library     List all packages included with SIGpi with installed ones marked with an *
          SIGpi shell            provide SIGpi env variables around a TARGET

EOF
;;
esac

exit 0
